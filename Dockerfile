#############################################################
#
# Agave JWT Signer
# Tag: agaveplatform/jwt-signer:develop
#
# Utility image to interact with a java keystore managed by
# WSO2 API Manager and Identity Server to sign JWT. The image
# contains two utilities: agave-jwt-signer and agave-certreader.
#
# * agave-jwt-signer: use an existing keystore to generate a
#   signed JWT similar to that generated by the WSO2 APIM and
#   passed to backend APIs.
# * agave-certreader: reads the public RSA key used to sign the
#   JWT and exports to stdout. This provides the key necessary
#   to validate a JWT using standard Jose libraries in any lang.
#
# Examples:
#
#   docker run -it --rm \
#           -v $(pwd):/app \
#			agaveplatform/jwt-signer:develop --alias=wso2carbon \
#                                             --keypass=wso2carbon \
#                                             --storepass=wso2carbon \
#                                             --tenant=sandbox \
#                                             --username=testuser \
#                                             wso2carbon.jks
#
#   docker run -it --rm \
#           -v $(pwd):/app \
#           --entrypoint /bin/agave-certreader \
#			agaveplatform/jwt-signer:develop --alias=wso2carbon \
#                                             --keypass=wso2carbon \
#                                             --storepass=wso2carbon \
#                                             --tenant=sandbox \
#                                             --username=testuser \
#                                             wso2carbon.jks
#
# https://agaveplatform.org
#
#############################################################

FROM maven:3-jdk-9 as maven3

# Standard Maven build of Java code to produce an executable jar
COPY ./src /app/src
COPY ./pom.xml /app/pom.xml

WORKDIR /app

RUN mvn clean
RUN mvn package
RUN ls -al target/*.jar
RUN java -jar target/agave-jwt-signer-1.0-SNAPSHOT.jar --help
RUN java -jar target/agave-certreader-1.0-SNAPSHOT.jar --help

FROM oracle/graalvm-ce:19.2.0 as graalvm

# Take the shaded jar and build a GraalVM native image that will run on
# any linux host without a JVM required.
RUN  gu install native-image

COPY --from=maven3 /app/target /app

RUN java -jar /app/agave-jwt-signer-1.0-SNAPSHOT.jar --help && \
	java -jar /app/agave-certreader-1.0-SNAPSHOT.jar --help

RUN native-image \
		-jar /app/agave-jwt-signer-1.0-SNAPSHOT.jar \
	 	-H:+ReportUnsupportedElementsAtRuntime \
	 	--enable-all-security-services \
	 	--static \
	 	--no-server \
	 	/app/agave-jwt-signer-graalvm-amd64

RUN native-image \
		-jar /app/agave-certreader-1.0-SNAPSHOT.jar \
	 	-H:+ReportUnsupportedElementsAtRuntime \
	 	--enable-all-security-services \
	 	--static \
	 	--no-server \
	 	/app/agave-certreader-graalvm-amd64


FROM alpine:latest
MAINTAINER Rion Dooley <deardooley@gmail.com>

# Copy the executable GraalVM binary to a minimal alpine image for distribution
COPY --from=graalvm /app/agave-jwt-signer-graalvm-amd64 /bin/agave-jwt-signer-graalvm-amd64
COPY --from=graalvm /app/agave-certreader-graalvm-amd64 /bin/agave-certreader-graalvm-amd64
COPY bin/agave-jwt-signer.sh bin/agave-jwt-signer
COPY bin/agave-certreader.sh bin/agave-certreader
COPY ./example.jks /example.jks
COPY ./jwt.conf.example /jwt.conf.example

RUN bin/agave-jwt-signer @/jwt.conf.example
RUN bin/agave-certreader @/jwt.conf.example

ENTRYPOINT ["/bin/agave-jwt-signer"]

CMD ['-help']